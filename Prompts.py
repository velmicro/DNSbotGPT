import json
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler("logs/prompts.log", encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

PROMPTS_FILE = "prompts.json"

def load_prompts():
    if not os.path.exists(PROMPTS_FILE):
        logger.info("–§–∞–π–ª prompts.json –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π...")
        default_prompts = {
            "settings": {
                "name": "–ó–µ–ª—ë–Ω—ã–π",
                "greeting": "–ü—Ä–∏–≤–µ—Ç! –Ø –ó–µ–ª—ë–Ω—ã–π, —Ç–≤–æ–π —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
                "role": "–£–º–Ω—ã–π AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç",
                "goal": "–ü–æ–º–æ–≥–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º DNS —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø–æ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–º—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é...",
                "behavior": [
                    "–í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ",
                    "–í—Å–µ–≥–¥–∞ –±—É–¥—å –≤–µ–∂–ª–∏–≤—ã–º –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º",
                    "–û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É...",
                    "–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç–∞, —á–µ—Å—Ç–Ω–æ –ø—Ä–∏–∑–Ω–∞–≤–∞–π —ç—Ç–æ...",
                    "–í –≥—Ä—É–ø–ø–∞—Ö —Ä–µ–∞–≥–∏—Ä—É–π —Ç–æ–ª—å–∫–æ –Ω–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è —Å –∏–º–µ–Ω–µ–º '–ó–µ–ª—ë–Ω—ã–π'",
                    "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ç–µ—Ö–Ω–∏–∫–∏...",
                    "–û—Ç–≤–µ—á–∞—Ç—å –¥—Ä—É–∂–µ–ª—é–±–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ",
                    "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤"
                ],
                "restrictions": [
                    "–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Ä–µ–¥–Ω–æ–π...",
                    "–ù–µ –æ—Ç–≤–µ—á–∞–π –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã, –Ω–∞—Ä—É—à–∞—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ Telegram",
                    "–ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ—è—Å–µ–Ω, –ø–æ–ø—Ä–æ—Å–∏ —É—Ç–æ—á–Ω–∏—Ç—å",
                    "–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —è–∑—ã–∫–∏ –∫—Ä–æ–º–µ —Ä—É—Å—Å–∫–æ–≥–æ",
                    "–ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã –∏–∑ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–æ–≤...",
                    "–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã",
                    "–ù–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
                ],
                "model": "llama-3.3-70b-versatile",
                "active_commands": ["/start", "/add_qa", "/inf1", "/inf2"],
                "commands": [
                    {
                        "name": "/start",
                        "type": "text",
                        "response": "–ü—Ä–∏–≤–µ—Ç! –Ø –ó–µ–ª—ë–Ω—ã–π, —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫.",
                        "access": "public",
                        "inline_buttons": []
                    },
                    {
                        "name": "/help",
                        "type": "inline_buttons",
                        "response": "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                        "access": "admin",
                        "inline_buttons": [
                            {"text": "–û –±–æ—Ç–µ", "url": "https://example.com/about"},
                            {"text": "–ü–æ–º–æ—â—å", "url": "https://example.com/help"}
                        ]
                    }
                ],
                "buttons": ["–ù–æ–≤—ã–π –¥–∏–∞–ª–æ–≥", "–û –±–æ—Ç–µ", "–ü–æ–º–æ—â—å"]
            },
            "dialogs": {
                "–ø—Ä–∏–≤–µ—Ç": "–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? üòä",
                "–ø–æ–∫–∞": "–ü–æ–∫–∞! –ï—Å–ª–∏ —á—Ç–æ, –ø–∏—à–∏, —è –≤—Å–µ–≥–¥–∞ —Ç—É—Ç! üëã",
                "–∫–∞–∫ –¥–µ–ª–∞": "–û—Ç–ª–∏—á–Ω–æ, —Å–ø–∞—Å–∏–±–æ! –ê —É —Ç–µ–±—è? üòÑ",
                "—Å–ø–∞—Å–∏–±–æ": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –ø–æ–º–æ—á—å! üòä",
                "–∫—Ç–æ —Ç—ã": "–Ø –ó–µ–ª—ë–Ω—ã–π, —Ç–≤–æ–π —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫!...",
                "–ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑": "–ö–æ–Ω–µ—á–Ω–æ, –¥–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑!...",
                "–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç": "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ó–µ–ª—ë–Ω—ã–π!..."
            },
            "search_instructions": [
                {"theme": "—é—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", "site": "consultant.ru", "instructions": ""},
                {"theme": "—Ç–æ–≤–∞—Ä dns", "site": "dns-shop.ru", "instructions": ""}
            ],
            "emojis": {
                "instruction": "üìã",
                "characteristics": "üìä",
                "legal": "‚öñÔ∏è",
                "diagnostic": "üîß",
                "comparison": "‚öñÔ∏è",
                "product": "üõí",
                "default": "üí°",
                "error": "üòî",
                "success": "‚úÖ"
            }
        }
        with open(PROMPTS_FILE, "w", encoding='utf-8') as f:
            json.dump(default_prompts, f, ensure_ascii=False, indent=4)
    try:
        with open(PROMPTS_FILE, encoding='utf-8') as f:
            return json.load(f)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ prompts.json: {e}")
        return {}

def save_prompts(prompts):
    try:
        with open(PROMPTS_FILE, "w", encoding='utf-8') as f:
            json.dump(prompts, f, ensure_ascii=False, indent=4)
        logger.info("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ prompts.json")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è prompts.json: {e}")